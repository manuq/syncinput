(()=>{"use strict";var t={547:(t,e)=>{e.__esModule=!0,e.Button=void 0;var s=function(){function t(){this.pressed=!1,this.justPressed=!1,this.justReleased=!1}return t.prototype.update=function(e){this.justPressed=!1,this.justReleased=!1,e===t.DOWN?(!1===this.pressed&&(this.justPressed=!0),this.pressed=!0):e===t.UP?(this.pressed&&(this.justReleased=!0),this.pressed=!1):e===t.RESET&&(this.justReleased=!1,this.justPressed=!1)},t.prototype.set=function(t,e,s){this.justPressed=t,this.pressed=e,this.justReleased=s},t.prototype.reset=function(){this.justPressed=!1,this.pressed=!1,this.justReleased=!1},t.DOWN=-1,t.UP=1,t.RESET=0,t}();e.Button=s},866:(t,e)=>{e.__esModule=!0,e.EventManager=void 0;var s=function(){function t(){this.events=[]}return t.prototype.add=function(t,e,s){this.events.push([t,e,s,!1])},t.prototype.addAndCreate=function(t,e,s){t.addEventListener(e,s),this.events.push([t,e,s,!0])},t.prototype.clear=function(){this.destroy(),this.events=[]},t.prototype.remove=function(t,e){for(var s=this.events.length-1;s>=0;s--)this.events[s][0]===t&&this.events[s][1]===e&&(this.events[s][3]&&(this.events[s][0].removeEventListener(this.events[s][1],this.events[s][2]),this.events[s][3]=!1),this.events.splice(s,1))},t.prototype.create=function(){for(var t=0;t<this.events.length;t++){var e=this.events[t];e[0].addEventListener(e[1],e[2]),e[3]=!0}},t.prototype.destroy=function(){for(var t=0;t<this.events.length;t++){var e=this.events[t];e[0].removeEventListener(e[1],e[2]),e[3]=!1}},t}();e.EventManager=s},826:(t,e,s)=>{e.__esModule=!0,e.Gamepad=void 0;var n=s(547),o=function(){function t(){this.vendor=-1,this.product=-1,this.connected=!1,this.index=-1,this.buttons=[],this.gamepad=null;for(var t=navigator.getGamepads(),e=0;e<t.length;e++)if(null!==t[e]){this.setGamepad(t[e]);break}null===this.gamepad&&console.error("No gamepad found")}return t.prototype.setGamepad=function(t){if(null!=t){this.index=t.index,this.gamepad=t,this.buttons=[];for(var e=0;e<t.buttons.length;e++)this.buttons.push(new n.Button);this.setProductVendor(t),this.connected=!0}else console.warn("nunuStudio: No gamepad found"),this.disconnect()},t.prototype.disconnect=function(){this.vendor=-1,this.product=-1,this.connected=!1,this.gamepad=null,this.buttons=[]},t.prototype.setProductVendor=function(t){try{var e=t.id.split(":");return this.vendor=e[1].split(" ")[1],void(this.product=e[2].replace(" ","").replace(")",""))}catch(t){}try{return e=t.id.split("-"),this.vendor=e[0],void(this.product=e[1])}catch(t){}},t.prototype.update=function(t){if(this.gamepad=navigator.getGamepads()[this.index],void 0!==this.gamepad)for(var e=0;e<this.buttons.length;e++)this.buttons[e].update(this.gamepad.buttons[e].pressed?n.Button.DOWN:n.Button.UP)},t.prototype.getAnalogueButton=function(t){return t>this.buttons.length||t<0?0:this.gamepad.buttons[t].value},t.prototype.getAxis=function(t){return t>this.gamepad.axes.length||t<0?0:this.gamepad.axes[t]},t.prototype.buttonExists=function(t){return t>=0&&t<this.buttons.length},t.prototype.buttonPressed=function(t){return!!this.buttons[t]&&this.buttons[t].pressed},t.prototype.buttonJustPressed=function(t){return!!this.buttons[t]&&this.buttons[t].justPressed},t.prototype.buttonJustReleased=function(t){return!!this.buttons[t]&&this.buttons[t].justReleased},t.LEFT=14,t.RIGHT=15,t.DOWN=13,t.UP=12,t.SELECT=8,t.START=9,t.HOME=16,t.LEFT_TRIGGER_A=4,t.LEFT_TRIGGER_B=6,t.RIGHT_TRIGGER_A=5,t.RIGHT_TRIGGER_B=7,t.L1=4,t.L2=6,t.L3=6,t.R1=5,t.R2=7,t.R3=11,t.A=0,t.B=1,t.C=2,t.D=3,t.X=2,t.Y=3,t.LEFT_ANALOGUE_BUT=10,t.LEFT_ANALOGUE_HOR=0,t.LEFT_ANALOGUE_VERT=1,t.RIGHT_ANALOGUE_BUT=11,t.RIGHT_ANALOGUE_HOR=2,t.RIGHT_ANALOGUE_VERT=3,t}();e.Gamepad=o},126:(t,e,s)=>{e.__esModule=!0,e.Keyboard=void 0;var n=s(866),o=s(547),i=function(){function t(t){this.keys=[],this.actions=[],this.domElement=null,this.events=null,this.keys=new Array(256),this.actions=[],this.domElement=t||window;for(var e=0;e<256;e++)this.keys[e]=new o.Button;this.events=new n.EventManager;var s=this.actions,i=this;this.events.add(this.domElement,"keydown",(function(t){s.push(t.keyCode),s.push(o.Button.DOWN)})),this.events.add(this.domElement,"keyup",(function(t){s.push(t.keyCode),s.push(o.Button.UP)})),this.events.add(this.domElement,"focus",(function(t){i.reset()})),this.events.create()}return t.prototype.update=function(){for(var t=0;this.actions.length>t;){var e=this.actions.shift(),s=this.actions.shift();this.keys[e].update(s),(this.keys[e].justReleased||this.keys[e].justPressed)&&(this.actions.push(e),this.actions.push(o.Button.RESET),t+=2)}},t.prototype.reset=function(){for(var t=0;t<this.keys.length;t++)this.keys[t].reset()},t.prototype.keyPressed=function(t){return this.keys[t].pressed},t.prototype.keyJustPressed=function(t){return this.keys[t].justPressed},t.prototype.keyJustReleased=function(t){return this.keys[t].justReleased},t.prototype.dispose=function(){this.events.destroy()},t}();e.Keyboard=i},884:(t,e)=>{e.__esModule=!0,e.Keys=void 0;var s=function(){function t(){}return t.TAB=9,t.ENTER=13,t.SHIFT=16,t.CTRL=17,t.ALT=18,t.CAPS_LOCK=20,t.ESC=27,t.SPACEBAR=32,t.PAGE_UP=33,t.PAGE_DOWN=34,t.END=35,t.HOME=36,t.INSERT=45,t.DEL=46,t.LEFT=37,t.RIGHT=39,t.UP=38,t.DOWN=40,t.NUM0=48,t.NUM1=49,t.NUM2=50,t.NUM3=51,t.NUM4=52,t.NUM5=53,t.NUM6=54,t.NUM7=55,t.NUM8=56,t.NUM9=57,t.A=65,t.B=66,t.C=67,t.D=68,t.E=69,t.F=70,t.G=71,t.H=72,t.I=73,t.J=74,t.K=75,t.L=76,t.M=77,t.N=78,t.O=79,t.P=80,t.Q=81,t.R=82,t.S=83,t.T=84,t.U=85,t.V=86,t.W=87,t.X=88,t.Y=89,t.Z=90,t.F1=112,t.F2=113,t.F3=114,t.F4=115,t.F5=116,t.F6=117,t.F7=118,t.F8=119,t.F9=120,t.F10=121,t.F11=122,t.F12=123,t}();e.Keys=s},476:function(t,e,s){var n=this&&this.__createBinding||(Object.create?function(t,e,s,n){void 0===n&&(n=s);var o=Object.getOwnPropertyDescriptor(e,s);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[s]}}),Object.defineProperty(t,n,o)}:function(t,e,s,n){void 0===n&&(n=s),t[n]=e[s]});e.__esModule=!0,e.Button=e.Touch=e.Vector2=e.Mouse=e.Keyboard=e.Keys=e.Gamepad=void 0,n(e,s(826),"Gamepad"),n(e,s(884),"Keys"),n(e,s(126),"Keyboard"),n(e,s(290),"Mouse"),n(e,s(601),"Vector2"),n(e,s(88),"Touch"),n(e,s(547),"Button")},290:(t,e,s)=>{e.__esModule=!0,e.Mouse=void 0;var n=s(601),o=s(866),i=s(547),u=function(){function t(e){this.positionUpdated=!1,this.wheelUpdated=!1,this.tempDoubleClicked=!1,this.keys=new Array(5),this.position=new n.Vector2(0,0),this.wheel=0,this.delta=new n.Vector2(0,0),this.doubleClicked=!1,this.domElement=null,this.canvas=null,this.events=null,this.tempWheel=0,this.tempDelta=new n.Vector2(0,0),this.tempKeys=new Array(5),this.tempPosition=new n.Vector2(0,0),this.domElement=void 0!==e?e:window,this.events=new o.EventManager;for(var s=0;s<5;s++)this.tempKeys[s]=new i.Button,this.keys[s]=new i.Button;var u=this;if(void 0!==window.onmousewheel?this.events.add(this.domElement,"mousewheel",(function(t){u.tempWheel=t.deltaY,u.wheelUpdated=!0,t.preventDefault()})):void 0!==window.addEventListener?this.events.add(this.domElement,"DOMMouseScroll",(function(t){u.tempWheel=30*t.detail,u.wheelUpdated=!0,t.preventDefault()})):this.events.add(this.domElement,"wheel",(function(t){u.tempWheel=t.deltaY,u.wheelUpdated=!0,t.preventDefault()})),"ontouchstart"in window||navigator.msMaxTouchPoints>0){var r=new n.Vector2(0,0);this.events.add(this.domElement,"touchstart",(function(e){var s=e.touches[0];u.updatePosition(s.screenX,s.screenY,0,0),u.updateKey(t.LEFT,i.Button.DOWN),r.set(s.screenX,s.screenY)})),this.events.add(this.domElement,"touchend",(function(e){u.updateKey(t.LEFT,i.Button.UP)})),this.events.add(this.domElement,"touchcancel",(function(e){u.updateKey(t.LEFT,i.Button.UP)})),this.events.add(document.body,"touchmove",(function(t){var e=t.touches[0];u.updatePosition(e.screenX,e.screenY,e.screenX-r.x,e.screenY-r.y),r.set(e.screenX,e.screenY)}))}this.events.add(this.domElement,"mousemove",(function(t){u.updatePosition(t.offsetX,t.offsetY,t.movementX,t.movementY)})),this.events.add(this.domElement,"mousedown",(function(t){u.updateKey(t.which-1,i.Button.DOWN)})),this.events.add(this.domElement,"mouseup",(function(t){u.updateKey(t.which-1,i.Button.UP)})),this.events.add(this.domElement,"mouseleave",(function(t){u.updateKey(t.which-1,i.Button.UP)})),this.events.add(this.domElement,"dragstart",(function(t){u.updateKey(t.which-1,i.Button.UP)})),this.events.add(this.domElement,"dblclick",(function(t){u.tempDoubleClicked=!0})),this.events.create()}return t.prototype.setCanvas=function(t){this.canvas=t,t.mouseInside=!1,t.addEventListener("mouseenter",(function(t){this.mouseInside=!0})),t.addEventListener("mouseleave",(function(t){this.mouseInside=!1}))},t.prototype.insideCanvas=function(){return null!==this.canvas&&this.canvas.mouseInside},t.prototype.setLock=function(t){null!==this.canvas&&(t?this.canvas.requestPointerLock?this.canvas.requestPointerLock():this.canvas.mozRequestPointerLock?this.canvas.mozRequestPointerLock():this.canvas.webkitRequestPointerLock&&this.canvas.webkitRequestPointerLock():document.exitPointerLock?document.exitPointerLock():document.mozExitPointerLock?document.mozExitPointerLock():document.webkitExitPointerLock&&document.webkitExitPointerLock())},t.prototype.buttonPressed=function(t){return this.keys[t].pressed},t.prototype.buttonDoubleClicked=function(){return this.doubleClicked},t.prototype.buttonJustPressed=function(t){return this.keys[t].justPressed},t.prototype.buttonJustReleased=function(t){return this.keys[t].justReleased},t.prototype.updatePosition=function(t,e,s,n){this.tempPosition.set(t,e),this.tempDelta.x+=s,this.tempDelta.y+=n,this.positionUpdated=!0},t.prototype.updateKey=function(t,e){t>-1&&this.tempKeys[t].update(e)},t.prototype.update=function(){for(var t=0;t<this.tempKeys.length;t++)this.tempKeys[t].justPressed&&this.keys[t].justPressed&&(this.tempKeys[t].justPressed=!1),this.tempKeys[t].justReleased&&this.keys[t].justReleased&&(this.tempKeys[t].justReleased=!1),this.keys[t].set(this.tempKeys[t].justPressed,this.tempKeys[t].pressed,this.tempKeys[t].justReleased);this.wheelUpdated?(this.wheel=this.tempWheel,this.wheelUpdated=!1):this.wheel=0,this.tempDoubleClicked?(this.doubleClicked=!0,this.tempDoubleClicked=!1):this.doubleClicked=!1,this.positionUpdated?(this.delta.copy(this.tempDelta),this.position.copy(this.tempPosition),this.tempDelta.set(0,0),this.positionUpdated=!1):(this.delta.x=0,this.delta.y=0)},t.prototype.dispose=function(){this.events.destroy()},t.LEFT=0,t.MIDDLE=1,t.RIGHT=2,t.BACK=3,t.FORWARD=4,t}();e.Mouse=u},88:(t,e,s)=>{e.__esModule=!0,e.Touch=e.TouchPoint=e.TouchPointState=void 0;var n,o=s(601),i=s(866);!function(t){t[t.NONE=-1]="NONE",t[t.PRESSED=1]="PRESSED",t[t.JUST_PRESSED=2]="JUST_PRESSED",t[t.JUST_RELEASED=3]="JUST_RELEASED"}(n=e.TouchPointState||(e.TouchPointState={}));e.TouchPoint=function(){this.state=n.NONE,this.position=new o.Vector2,this.delta=new o.Vector2,this.pressure=null};var u=function(){function t(t){if(this.touch=[],this.domElement=null,this.canvas=null,this.events=null,this.domElement=void 0!==t?t:window,this.events=new i.EventManager,"ontouchstart"in window){var e=new o.Vector2(0,0);this.events.add(this.domElement,"touchstart",(function(t){console.log("EQS: Touch start event",t);for(var s=0;s<t.touches.length;s++){var n=t.touches[s];e.set(n.screenX,n.screenY)}})),this.events.add(this.domElement,"touchend",(function(t){console.log("EQS: Touch end event",t)})),this.events.add(this.domElement,"touchcancel",(function(t){console.log("EQS: Touch cancel event",t)})),this.events.add(document.body,"touchmove",(function(t){console.log("EQS: Touch move event",t);for(var s=0;s<t.touches.length;s++){var n=t.touches[s];e.set(n.screenX,n.screenY)}}))}this.events.create()}return t.prototype.touchPressed=function(t){return!1},t.prototype.touchJustPressed=function(t){return!1},t.prototype.touchJustReleased=function(t){return!1},t.prototype.update=function(){},t.prototype.dispose=function(){this.events.destroy()},t}();e.Touch=u},601:(t,e)=>{e.__esModule=!0,e.Vector2=void 0;var s=function(){function t(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this.x=t,this.y=e}return t.prototype.set=function(t,e){this.x=t,this.y=e},t.prototype.copy=function(t){this.set(t.x,t.y)},t}();e.Vector2=s}},e={};!function s(n){var o=e[n];if(void 0!==o)return o.exports;var i=e[n]={exports:{}};return t[n].call(i.exports,i,i.exports,s),i.exports}(476)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,